export const Topics = () => {
  return [
    { value: "array", label: "Array" },
    { value: "linked-list", label: "Linked List" },
    { value: "stack", label: "Stack" },
    { value: "queue", label: "Queue" },
    { value: "tree", label: "Tree" },
    { value: "graph", label: "Graph" },
    { value: "hashing", label: "Hashing" },
    { value: "dynamic-programming", label: "Dynamic Programming" },
    { value: "greedy", label: "Greedy" },
    { value: "recursion", label: "Recursion" },
    { value: "sorting", label: "Sorting" },
    { value: "searching", label: "Searching" },
    { value: "two-pointer", label: "Two Pointer" },
    { value: "sliding-window", label: "Sliding Window" },
    { value: "bit-manipulation", label: "Bit Manipulation" },
    { value: "divide-and-conquer", label: "Divide and Conquer" },
    { value: "backtracking", label: "Backtracking" },
    { value: "mathematics", label: "Mathematics" },
    { value: "number-theory", label: "Number Theory" },
    { value: "graph-traversal", label: "Graph Traversal (BFS/DFS)" },
    { value: "minimum-spanning-tree", label: "Minimum Spanning Tree" },
    { value: "shortest-path", label: "Shortest Path" },
    { value: "binary-search", label: "Binary Search" },
    { value: "heap", label: "Heap" },
    { value: "trie", label: "Trie" },
    { value: "floyd-warshall", label: "Floyd-Warshall Algorithm" },
    { value: "bellman-ford", label: "Bellman-Ford Algorithm" },
    { value: "kmp", label: "KMP String Matching Algorithm" },
    { value: "dp-on-trees", label: "Dynamic Programming on Trees" },
    { value: "tree-traversal", label: "Tree Traversal (Pre/In/Post Order)" },
    { value: "prime-numbers", label: "Prime Numbers (Sieve of Eratosthenes)" },
    { value: "recursion-vs-iteration", label: "Recursion vs Iteration" },
    { value: "memoization", label: "Memoization" },
    { value: "knapsack", label: "Knapsack Problem" },
    { value: "game-theory", label: "Game Theory" },
    { value: "geometry", label: "Computational Geometry" },
    { value: "probability", label: "Probability & Combinatorics" },
    { value: "conditionals", label: "Conditionals (If/Else)" },
    { value: "loops", label: "Loops (For/While)" },
    { value: "functions", label: "Functions" },
    { value: "variables", label: "Variables" },
    { value: "pointers", label: "Pointers" },
    { value: "object-oriented", label: "Object-Oriented Programming" },
    { value: "functional-programming", label: "Functional Programming" },
    { value: "complexity-analysis", label: "Complexity Analysis (Big O)" },
  ];
};
